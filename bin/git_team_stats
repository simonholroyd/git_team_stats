#!/usr/bin/env ruby

require 'json'
require 'progress_bar'
require 'language_sniffer'
require 'gli'
require 'git_team_stats'

include GLI::App
 
program_desc 'Analyze commits and committers in mulitple git repos and output project-level statistics'
 
flag [:config_path], :default_value => File.join(Dir.pwd,'.git_team_stats.json')
flag [:time_period], :default_value => :week
flag [:project], :default_value => :none
flag [:user], :default_value => :none
 
pre do |global_options,command,options,args|
  $dir = Dir.pwd

  $users = []
  $projects = []

  if File.exists? global_options[:config_path]
    config = JSON.parse(File.read(global_options[:config_path]), {:symbolize_names => true})

    $users = (config[:users].empty?) ? [] : config[:users]
    puts config[:projects]
    $projects = (config[:projects].empty?) ? [] : config[:projects]

  end

  if $projects.empty?
    $projects.push({
        :name => "current",
        :repos => [Dir.pwd],
        :ignored_directories => [],
        :default => true
      })
  end
end
 
command :test do |c|
  c.action do |global_options,options,args|
    puts $dir
    puts $projects
    puts $users

    puts global_options
  end
end
 
command :list do |c|
  c.action do
    # $todo_list.list.each do |todo|
    #   printf("%5d - %s\n",todo.todo_id,todo.text)
    # end
  end
end
 
command :done do |c|
  c.action do |global_options,options,args|
    # id = args.shift.to_i
    # $todo_list.list.each do |todo|
    #   $todo_list.complete(todo) if todo.todo_id == id
    # end
  end
end
 
exit run(ARGV)